# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Pull request against these branches will trigger this build
pr: none

# A new tag will trigger the build
trigger:
  tags:
    include:
    - 0.*
    - 1.*

variables:
- group: LinuxAgentPool

jobs:
# ====== Unit tests ======
- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - unit
    task_name: "Test - Unit Linux CPU"
    conda_env: "release_unit_linux_cpu"
    conda_opts: "python=3.6"
    pip_opts: ""
    pytest_markers: "not notebooks and not spark and not gpu"
    install: "release"
    package: "publish" 

- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - unit
    task_name: "Test - Unit Notebook Linux CPU"
    conda_env: "release_unit_notebook_linux_cpu"
    conda_opts: "python=3.6"
    pip_opts: "[examples]"
    pytest_markers: "notebooks and not spark and not gpu"
    install: "release"

- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - unit
    task_name: "Test - Unit Linux GPU"
    conda_env: "release_unit_linux_gpu"
    conda_opts: "python=3.6 cudatoolkit=10.0 \"cudnn>=7.6\""
    pip_opts: "[gpu] -f https://download.pytorch.org/whl/cu100/torch_stable.html"
    pytest_markers: "not notebooks and not spark and gpu"
    install: "release"

- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - unit
    task_name: "Test - Unit Notebook Linux GPU"
    conda_env: "release_unit_notebook_linux_gpu"
    conda_opts: "python=3.6 cudatoolkit=10.0 \"cudnn>=7.6\""
    pip_opts: "[gpu,examples]  -f https://download.pytorch.org/whl/cu100/torch_stable.html"
    pytest_markers: "notebooks and not spark and gpu"
    install: "release"

- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - unit
    task_name: "Test - Unit Linux Spark"
    conda_env: "release_unit_linux_spark"
    conda_opts: "python=3.6"
    pip_opts: "[spark]"
    pytest_markers: "not notebooks and spark and not gpu"
    install: "release"

- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - unit
    task_name: "Test - Unit Notebook Linux Spark"
    conda_env: "release_unit_notebook_linux_spark"
    conda_opts: "python=3.6"
    pip_opts: "[spark,examples]"
    pytest_markers: "notebooks and spark and not gpu"
    install: "release"

# ====== Nightly tests ======
- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - smoke
    - integration
    task_name: "Test - Nightly Linux CPU"
    timeout: 180 
    conda_env: "release_nightly_linux_cpu"
    conda_opts: "python=3.6"
    pip_opts: "[examples]"
    pytest_markers: "not spark and not gpu"
    install: "release"

- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - smoke
    - integration
    task_name: "Test - Nightly Linux GPU"
    timeout: 240
    conda_env: "release_nightly_linux_gpu"
    conda_opts: "python=3.6 cudatoolkit=10.0 \"cudnn>=7.6\""
    pip_opts: "[gpu,examples]  -f https://download.pytorch.org/whl/cu100/torch_stable.html"
    pytest_markers: "not spark and gpu"
    install: "release"

- template: dsvm_linux_template.yml
  parameters:
    test_types:
    - smoke
    - integration
    task_name: "Test - Nightly Linux Spark"
    timeout: 180
    conda_env: "release_nightly_linux_spark"
    conda_opts: "python=3.6"
    pip_opts: "[spark,examples]"
    pytest_markers: "spark and not gpu"
    install: "release"

# ====== Publish release ======
- job: Package
  pool:
    name: $(Agent_Pool)
  dependsOn:
  - release_unit_linux_cpu
  - release_unit_notebook_linux_cpu
  - release_unit_linux_gpu
  - release_unit_notebook_linux_gpu
  - release_unit_linux_spark
  - release_unit_notebook_linux_spark
  - release_nightly_linux_cpu
  - release_nightly_linux_gpu
  - release_nightly_linux_spark
  condition: succeeded()
  steps:
  - task: DownloadPipelineArtifact@2 # Documentation: https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts?view=azure-devops&tabs=yaml-task
    displayName: 'Download Artifacts from Shared Storage'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))    
    inputs:
      artifact: PackageAssets
      path: $(Build.SourcesDirectory)/binaries
  
  - task: GitHubRelease@0 # Documentation: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/github-release?view=azure-devops
    displayName: 'Create GitHub Draft Release'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: recommenders_release
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'manual'
      tag: '$(tagName)'
      title: 'Recommenders'
      assets: |
        $(Build.SourcesDirectory)/binaries/*
      assetUploadMode: 'delete'
      isDraft: true
      isPreRelease: false
      addChangeLog: false